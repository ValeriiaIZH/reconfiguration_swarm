% VERSION 2
% тестирование функции генерации роботов, запись результатов в словарь (map)
% ввод количества роботов с консоли
clc; 
close all;
clearvars;
% ввод в консоль
num_of_robots = input('¬ведите количество роботов num = ');
% определ€ем границы области
% t0 = input('¬ведите первое граничное значение t0 = ');
% t1 = input('¬ведите второе граничное значение t1 = ');
max_peak = input('max_peak = ');
location = input('¬ведите расположение роботов: "1"-роботы вокруг центра, иначе роботы вне поверхности loc = ');
if location == 1
    location_mode = 1;
else
    location_mode = location;
    disp('–оботы вне поверхности');
end
% константы 
global min_dist R Density;
min_dist = 1;   % минимальное допустимое рассто€ние
R = 1;          % радиус робота
Density = 1;
% назначение первоначальных координат
robot_coordinates = generate_robots_v2(location_mode, num_of_robots, max_peak);
% запись в словарь
id = cell(num_of_robots,1);
for i = 1:num_of_robots
    for j =1:num_of_robots
    id{i,j} = sprintf('%d-%d:',i,j);
    end
end
distance=pdist2(robot_coordinates, robot_coordinates);
M = containers.Map(id,distance);
% генерируем поверхность
% координаты поверхности с целевыми точками 
num_of_peak = 4;
Peak = [max_peak*eye(num_of_peak/2) (-1)*max_peak*eye(num_of_peak/2)];
Peak = (reshape(Peak', 2, []))';      
Edge = [1 2;
        1 3;
        1 4;
        2 3;
        2 4;
        3 4];
num_of_edge = length(Edge);
AdjacentPeaks = zeros(num_of_peak, 2);
for i = 1 : num_of_peak
    [row, ~] = find(Edge == i, 2);
    AdjacentPeaks(i, :) = row';
end
clear row;
[ TargetAll, TargetPeak , TargetEdge ] = ...
                                         generate_targets_flat(Peak, Edge);                                                                       
% графики                                     
plot(robot_coordinates(:,1), robot_coordinates(:,2), 'om');
hold on;
grid on;
plotSurface( Peak, Edge, TargetAll )